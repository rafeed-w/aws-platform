name: Destroy All Tiers

on:
  workflow_dispatch:

env:

jobs:
  destroy-tier4-monitoring:
    name: Destroy Tier4 Monitoring
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Vault CLI
        run: |
          curl -fsSL https://releases.hashicorp.com/vault/1.15.2/vault_1.15.2_linux_amd64.zip -o vault.zip
          unzip vault.zip
          sudo mv vault /usr/local/bin/
          vault version

      - name: Get Secrets from Vault
        env:
          VAULT_ADDR: ${{ secrets.VAULT_URL }}
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
        run: |
          # Get terraform credentials
          TF_TOKEN=$(vault kv get -field=token secret/terraform)
          TF_ORG=$(vault kv get -field=organization secret/terraform)
          
          # Export as environment variables for subsequent steps
          echo "TF_API_TOKEN=$TF_TOKEN" >> $GITHUB_ENV
          echo "TF_CLOUD_ORGANIZATION=$TF_ORG" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ env.TF_API_TOKEN }}

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./infra/tier4_monitoring

      - name: Terraform Destroy
        id: destroy
        run: terraform destroy -auto-approve
        working-directory: ./infra/tier4_monitoring

  destroy-tier3-deployments:
    name: Destroy Tier3 Deployments
    runs-on: ubuntu-latest
    needs: destroy-tier4-monitoring
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Vault CLI
        run: |
          curl -fsSL https://releases.hashicorp.com/vault/1.15.2/vault_1.15.2_linux_amd64.zip -o vault.zip
          unzip vault.zip
          sudo mv vault /usr/local/bin/
          vault version

      - name: Get Secrets from Vault
        env:
          VAULT_ADDR: ${{ secrets.VAULT_URL }}
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
        run: |
          # Get terraform credentials
          TF_TOKEN=$(vault kv get -field=token secret/terraform)
          TF_ORG=$(vault kv get -field=organization secret/terraform)
          
          # Export as environment variables for subsequent steps
          echo "TF_API_TOKEN=$TF_TOKEN" >> $GITHUB_ENV
          echo "TF_CLOUD_ORGANIZATION=$TF_ORG" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ env.TF_API_TOKEN }}

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./infra/tier3_deployments

      - name: Terraform Destroy
        id: destroy
        run: terraform destroy -auto-approve
        working-directory: ./infra/tier3_deployments

  destroy-tier2-compute:
    name: Destroy Tier2 Compute
    runs-on: ubuntu-latest
    needs: destroy-tier3-deployments
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Vault CLI
        run: |
          curl -fsSL https://releases.hashicorp.com/vault/1.15.2/vault_1.15.2_linux_amd64.zip -o vault.zip
          unzip vault.zip
          sudo mv vault /usr/local/bin/
          vault version

      - name: Get Secrets from Vault
        env:
          VAULT_ADDR: ${{ secrets.VAULT_URL }}
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
        run: |
          # Get terraform credentials
          TF_TOKEN=$(vault kv get -field=token secret/terraform)
          TF_ORG=$(vault kv get -field=organization secret/terraform)
          
          # Export as environment variables for subsequent steps
          echo "TF_API_TOKEN=$TF_TOKEN" >> $GITHUB_ENV
          echo "TF_CLOUD_ORGANIZATION=$TF_ORG" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ env.TF_API_TOKEN }}

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./infra/tier2_compute

      - name: Terraform Destroy
        id: destroy
        run: terraform destroy -auto-approve
        working-directory: ./infra/tier2_compute

  destroy-tier1-network:
    name: Destroy Tier1 Network
    runs-on: ubuntu-latest
    needs: destroy-tier2-compute
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Vault CLI
        run: |
          curl -fsSL https://releases.hashicorp.com/vault/1.15.2/vault_1.15.2_linux_amd64.zip -o vault.zip
          unzip vault.zip
          sudo mv vault /usr/local/bin/
          vault version

      - name: Get Secrets from Vault
        env:
          VAULT_ADDR: ${{ secrets.VAULT_URL }}
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
        run: |
          # Get terraform credentials
          TF_TOKEN=$(vault kv get -field=token secret/terraform)
          TF_ORG=$(vault kv get -field=organization secret/terraform)
          
          # Export as environment variables for subsequent steps
          echo "TF_API_TOKEN=$TF_TOKEN" >> $GITHUB_ENV
          echo "TF_CLOUD_ORGANIZATION=$TF_ORG" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ env.TF_API_TOKEN }}

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./infra/tier1_network

      - name: Terraform Destroy
        id: destroy
        run: terraform destroy -auto-approve
        working-directory: ./infra/tier1_network

